{"version":3,"sources":["components/Photo-Applying.jpeg","components/res/uberlytics.gif","components/res/axia.jpeg","components/res/shortener.png","components/res/customerltv.png","components/res/piece.png","components/res/livin.png","components/res/HOSPISHARE_LOGO.png","components/res/plasticbottle.png","logo.svg","components/MarkDownComponent.jsx","components/AboutMe.jsx","components/Projects.jsx","components/NavBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MarkDownComponent","props","state","markdown","fetch","then","response","text","s","setState","className","source","this","Component","AboutMe","src","PhotoApplying","alt","ProjectCard","projectImage","projectName","projectDescription","Projects","axia","uberlytics","shortener","customerltv","livin","piece","hospishare","plasticbottle","NavBar","to","href","style","color","Icon","name","size","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9536c122.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Photo-Applying.16bdef61.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/uberlytics.9d6934ae.gif\";","module.exports = __webpack_public_path__ + \"static/media/axia.fba4f496.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/shortener.4d6db17c.png\";","module.exports = __webpack_public_path__ + \"static/media/customerltv.6793a41f.png\";","module.exports = __webpack_public_path__ + \"static/media/piece.3f4422e1.png\";","module.exports = __webpack_public_path__ + \"static/media/livin.d84fe685.png\";","module.exports = __webpack_public_path__ + \"static/media/HOSPISHARE_LOGO.adc4375b.png\";","module.exports = __webpack_public_path__ + \"static/media/plasticbottle.c8b1d94c.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component} from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\nimport './css/markdownComponent.css'\n\nclass MarkDownComponent extends Component {\n\n    constructor (props) {\n        super()\n        this.state = {\n            markdown: \"\",\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://raw.githubusercontent.com/kattu99/ReadingList/master/README.md')\n            .then(response => response.text()).then(s => this.setState({\n                markdown: s\n            }));\n    }\n\n    render () {\n        return (\n            <div className=\"markdownComponent\">\n                <ReactMarkdown source={this.state.markdown}/>\n            </div>\n        )\n    }\n}\n\nexport default MarkDownComponent;","import React, {Component} from 'react'\nimport './css/markdownComponent.css'\nimport PhotoApplying from './Photo-Applying.jpeg'\nimport aboutMe from './css/aboutme.css'\n\nclass AboutMe extends Component {\n\n    constructor (props) {\n        super()\n    }\n\n    render () {\n\n        return (\n            <div className=\"aboutMe\">\n                <h1>Hi, I'm Rahul</h1>\n                <img src={PhotoApplying} alt=\"hello\"/>\n                <p className='info'>I'm a student at Columbia University studying Computer Science and Applied Mathematics. This site is for keeping track of \n                    projects I've worked on and books I've read. \n                </p>\n\n            </div>\n        )\n    }\n}\n\nexport default AboutMe; ","import React, { Component} from 'react'\nimport PropTypes from 'prop-types'\nimport './css/projects.css'\nimport uberlytics from './res/uberlytics.gif'\nimport axia from './res/axia.jpeg'\nimport shortener from './res/shortener.png'\nimport customerltv from './res/customerltv.png'\nimport piece from './res/piece.png'\nimport livin from './res/livin.png'\nimport hospishare from './res/HOSPISHARE_LOGO.png'\nimport plasticbottle from './res/plasticbottle.png'\n\nclass ProjectCard extends Component { \n\n    constructor (props) {\n        super()\n    }\n\n    render () {\n        return (\n            <div className='projectCard'>\n                <div className='displayImage'>\n                    <img className='projectCardImage' src={this.props.projectImage} alt=\"hello\"/>\n                </div>\n                <div className='projectText'>\n                    <p className='projectCardName'>{this.props.projectName}</p>\n                    <p className='projectCardDescription'>{this.props.projectDescription}</p>\n                </div>\n            </div>\n        )\n    }\n} \n\nclass Projects extends Component {\n\n    constructor (props) {\n        super()\n    }\n\n    render () {\n        return (\n            <div className='projects'>\n                <ProjectCard projectName=\"Axia\" projectDescription=\"A tool for comparable analysis\" projectImage={axia}/>\n                <ProjectCard projectName=\"Uberlytics\" projectDescription=\"Understand trends in your uber rides and find other people\" projectImage={uberlytics}/>\n                <ProjectCard projectName=\"Shortener\" projectDescription=\"Process lecture videos into slides and transcript\" projectImage={shortener}/>\n                <ProjectCard projectName=\"Lifetime Value + Cohort Analysis Tool\" projectDescription=\"E-commerce tool to segment customers and perform analytics\" projectImage={customerltv}/>\n                <ProjectCard projectName=\"Roommate Matching Website\" projectDescription=\"Find roommates with similar interests easily\" projectImage={livin}/>\n                <ProjectCard projectName=\"Real Estate Fractional Ownership Website\" projectDescription=\"Front End for an app that displays homes and lets you big for shares\" projectImage={piece}/>\n                <ProjectCard projectName=\"HospiShare\" projectDescription=\"Ridesharing Application for hospital visits\" projectImage={hospishare}/>\n                <ProjectCard projectName=\"The Trash Collective\" projectDescription=\"Take pictures of plastic bottles and get directed to the nearest recycling bin\" projectImage={plasticbottle}/>\n            </div>\n        )\n\n    }\n}\n\nexport default Projects;","import React, {Component} from 'react';\nimport './css/navbar.css';\nimport { Icon } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport MarkDownComponent from './MarkDownComponent'\nimport AboutMe from './AboutMe';\nimport Projects from './Projects';\n\nclass NavBar extends Component {\n\n    constructor (props) {\n        super()\n    }\n\n    render () {\n        return (\n            <Router>\n                <div className=\"wrapper\">\n                    <div className=\"navBarVertical\">\n                        <div className=\"navBarName\">\n                            <p>Rahul Kataria</p>\n                        </div>\n                        <div className=\"navBarLinks\">\n                            <Link to=\"/aboutme\" className=\"link\"><p>About Me</p></Link>\n                            <Link to=\"/projects\" className=\"link\"><p>Projects</p></Link>\n                            <Link to=\"/reading\" className=\"link\"><p>Reading List</p></Link>\n                        </div>\n                        <div className=\"navBarSocial\">\n                                <a href=\"https://www.github.com/kattu99\" style={{color:'#303030'}}><Icon name='github' size='large' className=\"icon\" /></a>\n                                <a href=\"https://www.linkedin.com/in/rahul-kataria/\" style={{color:'#303030'}}><Icon name='linkedin' size='large' className=\"icon\"/></a>\n                        </div>\n                    </div>\n                    <div className=\"content\">\n                        <Switch>\n                            <Route path = \"/reading\">\n                                <MarkDownComponent/>\n                            </Route>\n                            <Route path = \"/aboutme\">\n                                <AboutMe/>\n                            </Route>\n                            <Route path=\"/projects\">\n                                <Projects/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        )\n    }\n\n}\n\n\nexport default NavBar; ","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavBar from './components/NavBar'\n\nfunction App() {\n  return (\n      <div className=\"homePage\">\n        <NavBar/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}